{"version":3,"sources":["apiCovin.js","util.js","Login.js","theme-sources/progress-bar-cell.jsx","theme-sources/highlighted-cell.jsx","theme-sources/integer-type-provider.jsx","theme-sources/date-type-provider.jsx","DataTable.js","Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["API_BASE","getOTP","phoneNumber","Promise","resolve","reject","data","JSON","stringify","config","method","url","headers","axios","then","response","catch","error","confirmOTP","txnId","encodedOTP","getDistricts","stateId","calendarByDistrict","districtId","date","localStorage","getItem","encryptSHA256","string","sjcl","codec","hex","fromBits","hash","sha256","Login","state","number","OTPSent","OTP","onPhoneChange","e","setState","target","value","onOTPChange","onGetOTP","setItem","onConfirmOTP","props","onSuccess","console","log","min","this","step","type","onChange","title","onClick","React","Component","ProgressBarCellBase","classes","style","percent","TableCell","className","progressBarCell","progressBar","width","toFixed","defaultProps","ProgressBarCell","withStyles","theme","paddingLeft","spacing","paddingRight","backgroundColor","palette","primary","light","float","height","name","HighlightedCellBase","amount","tableColumn","children","highlightedCell","color","textAlign","align","undefined","HighlightedCell","availableFilterOperations","IntegerTypeProvider","Formatter","Date","toTimeString","DateTypeProvider","formatterComponent","Cell","column","getRowId","row","id","DataTable","rows","useState","columns","columnName","tableColumnExtensions","integerColumns","dateColumns","Paper","defaultSorting","direction","defaultGrouping","defaultExpandedGroups","for","columnExtensions","cellComponent","showSortingControls","defaultOrder","map","showFilterSelector","showSelectAll","Dashboard","states","selectedState","districts","selectedDistrict","interval","startDate","toISOString","split","centers","executing","getDistrictsAndSetDefault","onIntervalChange","event","startInterval","executor","setInterval","executorMethod","stopInterval","clearInterval","formattedDate","getDate","getMonth","getFullYear","availabilityAt","now","processedData","forEach","sessions","session","push","center_id","toString","session_id","availability_at","concat","onError","onExecute","onStop","onDateChange","defaultStateId","htmlFor","district","disabled","App","reload","forceUpdate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60020ccb.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_BASE = 'https://cdn-api.co-vin.in/api'\n\nexport const getOTP = (phoneNumber) => new Promise((resolve, reject) => {\n    const data = JSON.stringify({\"mobile\": phoneNumber});\n\n    const config = {\n        method: 'post',\n        url: `${API_BASE}/v2/auth/public/generateOTP`,\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        data: data\n    };\n\n    axios(config)\n        .then(function (response) {\n            resolve(response.data)\n        })\n        .catch(function (error) {\n            reject(error)\n        });\n})\n\nexport const confirmOTP = (txnId, encodedOTP) => new Promise((resolve, reject) => {\n    const data = JSON.stringify({\"otp\":encodedOTP,\"txnId\":txnId});\n\n    const config = {\n        method: 'post',\n        url: `${API_BASE}/v2/auth/public/confirmOTP`,\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        data : data\n    };\n\n    axios(config)\n        .then(function (response) {\n            resolve(response.data)\n        })\n        .catch(function (error) {\n            reject(error)\n        });\n})\n\nexport const getStates = () => new Promise((resolve, reject) => {\n    const config = {\n        method: 'get',\n        url: `${API_BASE}/v2/admin/location/states`\n    };\n    axios(config)\n        .then(function (response) {\n            resolve(response.data)\n        })\n        .catch(function (error) {\n            reject(error)\n        });\n})\n\nexport const getDistricts = (stateId) => new Promise((resolve, reject) => {\n    const config = {\n        method: 'get',\n        url: `${API_BASE}/v2/admin/location/districts/${stateId}`\n    };\n    axios(config)\n        .then(function (response) {\n            resolve(response.data)\n        })\n        .catch(function (error) {\n            reject(error)\n        });\n})\n\nexport const calendarByDistrict = (districtId, date) => new Promise((resolve, reject) => {\n    const config = {\n        method: 'get',\n        url: `${API_BASE}/v2/appointment/sessions/public/calendarByDistrict?district_id=${districtId}&date=${date}`,\n        headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n        }\n    };\n    axios(config)\n        .then(function (response) {\n            resolve(response.data)\n        })\n        .catch(function (error) {\n            reject(error)\n        });\n})","import sjcl from 'sjcl'\n\nexport const encryptSHA256 = (string) => sjcl.codec.hex.fromBits(sjcl.hash.sha256.hash(string))","import React from 'react'\nimport PropTypes from 'prop-types';\nimport {confirmOTP, getOTP} from \"./apiCovin\";\nimport {encryptSHA256} from \"./util\";\n\nexport default class Login extends React.Component {\n\n    static propTypes = {\n        onSuccess: PropTypes.func.isRequired\n    }\n\n    state = {\n        number: '',\n        OTPSent: false,\n        OTP: '',\n        error: null\n    }\n\n    componentDidMount() {\n        localStorage.setItem('txnId', '');\n        localStorage.setItem('token', '');\n    }\n\n    onPhoneChange = (e) => {\n        this.setState({\n            number: e.target.value\n        })\n    }\n\n    onOTPChange = (e) => {\n        this.setState({\n            OTP: e.target.value\n        })\n    }\n\n    onGetOTP = () => {\n        // TODO: validate phone number\n        getOTP(this.state.number).then(data => {\n            localStorage.setItem('txnId', data['txnId']);\n            this.setState({\n                OTPSent: true,\n                error: null\n            })\n        }).catch((error) => {\n            localStorage.setItem('txnId', null);\n            this.setState({\n                error: error.response.data,\n                OTPSent: false\n            })\n        })\n    }\n\n    onConfirmOTP = () => {\n        // TODO: validate OTP\n        const txnId = localStorage.getItem('txnId');\n        if (txnId) {\n            confirmOTP(txnId, encryptSHA256(this.state.OTP)).then(data => {\n                localStorage.setItem('token', data['token'])\n                this.props.onSuccess();\n                this.setState({\n                    error: null\n                })\n            }).catch(error => {\n                console.log('error response', error.response)\n                localStorage.setItem('token', '');\n                this.setState({\n                    error: error.response.data.error,\n                    OTPSent: false\n                })\n            })\n        } else {\n            console.error('No transaction ID found, retry the process');\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    Enter your phone number: <input min={1} value={this.state.number} step={1} type={'number'}\n                                                    onChange={this.onPhoneChange} title={'Phone number'}/>\n                    <button onClick={this.onGetOTP}>Get OTP</button>\n                </div>\n                {this.state.OTPSent ? <div>\n                    Enter the OTP: <input min={1} value={this.state.OTP} step={1} type={'number'}\n                                          onChange={this.onOTPChange} title={'OTP'}/>\n                    <button onClick={this.onConfirmOTP}>Confirm OTP</button>\n                </div> : null}\n                {this.state.error ? <div>{`Error: ${this.state.error}`}</div> : null}\n            </div>\n        )\n    }\n}","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport TableCell from '@material-ui/core/TableCell';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    progressBarCell: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n    },\n    progressBar: {\n        backgroundColor: theme.palette.primary.light,\n        float: 'left',\n        height: theme.spacing(1),\n    },\n});\n\nconst ProgressBarCellBase = ({ value, classes, style }) => {\n    const percent = value * 100;\n    return (\n        <TableCell\n            className={classes.progressBarCell}\n            style={style}\n        >\n            <div\n                className={classes.progressBar}\n                style={{ width: `${percent}%` }}\n                title={`${percent.toFixed(1)}%`}\n            />\n        </TableCell>\n    );\n};\n\nProgressBarCellBase.propTypes = {\n    value: PropTypes.number.isRequired,\n    classes: PropTypes.object.isRequired,\n    style: PropTypes.object,\n};\nProgressBarCellBase.defaultProps = {\n    style: {},\n};\n\nexport const ProgressBarCell = withStyles(styles, { name: 'ProgressBarCell' })(ProgressBarCellBase);\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport TableCell from '@material-ui/core/TableCell';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst getColor = (amount) => {\n    if (amount < 3000) {\n        return '#F44336';\n    }\n    if (amount < 5000) {\n        return '#FFC107';\n    }\n    if (amount < 8000) {\n        return '#FF5722';\n    }\n    return '#009688';\n};\n\nconst styles = theme => ({\n    highlightedCell: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n    },\n});\n\nconst HighlightedCellBase = ({\n                                 tableColumn, value, classes, children, style,\n                             }) => (\n    <TableCell\n        className={classes.highlightedCell}\n        style={{\n            color: getColor(value),\n            textAlign: tableColumn.align,\n            ...style,\n        }}\n    >\n        {children}\n    </TableCell>\n);\n\nHighlightedCellBase.propTypes = {\n    value: PropTypes.number.isRequired,\n    classes: PropTypes.object.isRequired,\n    style: PropTypes.object,\n    tableColumn: PropTypes.object,\n    children: PropTypes.node,\n};\nHighlightedCellBase.defaultProps = {\n    style: {},\n    tableColumn: {},\n    children: undefined,\n};\n\nexport const HighlightedCell = withStyles(styles, { name: 'HighlightedCell' })(HighlightedCellBase);\n","import * as React from 'react';\nimport { DataTypeProvider } from '@devexpress/dx-react-grid';\n\nconst availableFilterOperations = [\n    'equal', 'notEqual',\n    'greaterThan', 'greaterThanOrEqual',\n    'lessThan', 'lessThanOrEqual',\n];\n\nexport const IntegerTypeProvider = props => (\n    <DataTypeProvider\n        availableFilterOperations={availableFilterOperations}\n        {...props}\n    />\n);\n","import * as React from 'react';\nimport { DataTypeProvider } from '@devexpress/dx-react-grid';\n\nconst Formatter = ({ value }) => (value ? (new Date(value)).toTimeString() : 'NA');\n\nexport const DateTypeProvider = props => (\n    <DataTypeProvider\n        formatterComponent={Formatter}\n        {...props}\n    />\n);\n","import React, {useState} from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport {\n    SortingState, SelectionState, FilteringState, GroupingState, SearchState,\n    IntegratedFiltering, IntegratedGrouping, IntegratedSorting, IntegratedSelection,\n} from '@devexpress/dx-react-grid';\nimport {\n    Grid,\n    VirtualTable, TableHeaderRow, TableFilterRow, TableSelection, TableGroupRow,\n    GroupingPanel, DragDropProvider, TableColumnReordering, Toolbar, SearchPanel\n} from '@devexpress/dx-react-grid-material-ui';\n\n\nimport {ProgressBarCell} from './theme-sources/progress-bar-cell';\nimport {HighlightedCell} from './theme-sources/highlighted-cell';\nimport {IntegerTypeProvider} from \"./theme-sources/integer-type-provider\";\nimport {DateTypeProvider} from \"./theme-sources/date-type-provider\";\n\nconst Cell = (props) => {\n    const {column} = props;\n    if (column.name === 'discount') {\n        return <ProgressBarCell {...props} />;\n    }\n    if (column.name === 'amount') {\n        return <HighlightedCell {...props} />;\n    }\n    return <VirtualTable.Cell {...props} />;\n};\n\nconst getRowId = row => row.id;\n\nconst DataTable = ({rows}) => {\n    const [columns] = useState([\n        {name: 'availability_at', title: 'Availability At'},\n        {name: 'name', title: 'Center Name'},\n        {name: 'address', title: 'Address'},\n        {name: 'block_name', title: 'Block Name'},\n        {name: 'pincode', title: 'Pincode'},\n        {name: 'lat', title: 'Latitude'},\n        {name: 'long', title: 'Longitude'},\n        {name: 'from', title: 'Open From'},\n        {name: 'to', title: 'Open Till'},\n        {name: 'fee_type', title: 'Fee Type'},\n        {name: 'date', title: 'Date'},\n        {name: 'available_capacity', title: 'Available Capacity'},\n        {name: 'min_age_limit', title: 'Min Age Limit'},\n        {name: 'vaccine', title: 'Vaccine'},\n    ]);\n    const [tableColumnExtensions] = useState([\n        {columnName: 'name', align: 'left'},\n        {columnName: 'address', align: 'left'},\n    ]);\n    // const [currencyColumns] = useState(['amount']);\n    // const [percentColumns] = useState(['discount']);\n    // const [booleanColumns] = useState(['shipped']);\n    const [integerColumns] = useState(['pincode', 'lat', 'long', 'available_capacity', 'min_age_limit']);\n    const [dateColumns] = useState(['availability_at']);\n\n    return (\n        <Paper>\n            <Grid\n                rows={rows}\n                columns={columns}\n                getRowId={getRowId}\n            >\n                <DragDropProvider/>\n\n                <FilteringState/>\n                <SearchState/>\n                <SortingState\n                    defaultSorting={[\n                        {columnName: 'availability_at', direction: 'desc'},\n                        {columnName: 'date', direction: 'asc'}\n                    ]}\n                />\n                <GroupingState\n                    defaultGrouping={[]}\n                    defaultExpandedGroups={[]}\n                />\n                <SelectionState/>\n\n                <IntegratedFiltering/>\n                <IntegratedSorting/>\n                <IntegratedGrouping/>\n                <IntegratedSelection/>\n\n                {/*<CurrencyTypeProvider for={currencyColumns} />*/}\n                {/*<PercentTypeProvider for={percentColumns} />*/}\n                {/*<BooleanTypeProvider for={booleanColumns} />*/}\n                <IntegerTypeProvider for={integerColumns}/>\n                <DateTypeProvider for={dateColumns}/>\n                <VirtualTable\n                    columnExtensions={tableColumnExtensions}\n                    cellComponent={Cell}\n                />\n                <TableHeaderRow showSortingControls/>\n                <TableColumnReordering defaultOrder={columns.map(column => column.name)}/>\n                <TableFilterRow showFilterSelector/>\n                <TableSelection showSelectAll/>\n                <TableGroupRow/>\n                <Toolbar/>\n                <SearchPanel/>\n                <GroupingPanel showSortingControls/>\n            </Grid>\n        </Paper>\n    );\n};\n\nexport default DataTable;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {calendarByDistrict, getDistricts, getStates} from \"./apiCovin\";\nimport DataTable from \"./DataTable\";\n\nclass Dashboard extends React.Component {\n\n    static propTypes = {\n        onError: PropTypes.func.isRequired\n    }\n\n    state = {\n        states: [],\n        selectedState: '',\n        districts: [],\n        selectedDistrict: '',\n        interval: 1,\n        startDate: (new Date()).toISOString().split('T')[0],\n        centers: [],\n        executing: false\n    }\n\n    componentDidMount() {\n        getStates().then(data => {\n            const defaultStateId = data[\"states\"][0][\"state_id\"];\n            this.setState({\n                states: data[\"states\"],\n                selectedState: defaultStateId\n            })\n            this.getDistrictsAndSetDefault(defaultStateId)\n        })\n    }\n\n\n\n    getDistrictsAndSetDefault = (stateId) => {\n        getDistricts(stateId).then(data => {\n            this.setState({\n                districts: data[\"districts\"],\n                selectedDistrict: data[\"districts\"][0][\"district_id\"]\n            })\n        })\n    }\n\n    onIntervalChange = (event) => {\n        this.setState({\n            interval: event.target.value\n        })\n    }\n\n    startInterval = () => {\n        this.executor = setInterval(this.executorMethod, this.state.interval * 1000);\n        this.setState({\n            executing: true\n        })\n    }\n\n    stopInterval = () => {\n        clearInterval(this.executor);\n        this.setState({\n            executing: false\n        })\n    }\n\n    executorMethod = () => {\n        const date = new Date(this.state.startDate)\n        const formattedDate = ((date.getDate() > 9) ? date.getDate() : ('0' + date.getDate())) + '-' + ((date.getMonth() > 8) ? (date.getMonth() + 1) : ('0' + (date.getMonth() + 1))) + '-' + date.getFullYear();\n        calendarByDistrict(this.state.selectedDistrict, formattedDate).then(data => {\n            const availabilityAt = Date.now();\n            const processedData = []\n            data['centers'].forEach(row => {\n                row.sessions.forEach(session => {\n                    processedData.push({\n                        id: row.center_id.toString() + session.session_id.toString() + availabilityAt.toString(),\n                        availability_at: availabilityAt,\n                        ...session,\n                        ...row\n                    })\n                })\n            })\n            this.setState({\n                centers: this.state.centers.concat(processedData)\n            })\n        }).catch(error => {\n            localStorage.setItem('token', '')\n            this.props.onError();\n        })\n    }\n\n\n    onExecute = () => {\n        this.startInterval()\n    }\n\n    onStop = () => {\n        this.stopInterval()\n    }\n\n    onDateChange = (event) => {\n        this.setState({\n            startDate: event.target.value\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"Dashboard\">\n                <div>\n                    <div>\n                        <label htmlFor=\"state\">Select a state:</label>\n\n                        <select name=\"states\" id=\"states\" value={this.state.selectedState} onChange={(event) => {\n                            const stateId = event.target.value;\n                            this.setState({\n                                selectedState: stateId\n                            })\n                            this.getDistrictsAndSetDefault(stateId)\n                        }}>\n                            {\n                                this.state.states.map(state => <option value={state[\"state_id\"]}\n                                                                       key={state[\"state_id\"]}>{state[\"state_name\"]}</option>)\n                            }\n                        </select>\n                    </div>\n                    <div>\n                        <label htmlFor=\"district\">Select a district:</label>\n\n                        <select name=\"cars\" id=\"cars\" value={this.state.selectedDistrict} onChange={(event) => {\n                            this.setState({\n                                selectedDistrict: event.target.value\n                            })\n                        }}>\n                            {\n                                this.state.districts.map(district => <option value={district[\"district_id\"]}\n                                                                             key={district[\"district_id\"]}>{district[\"district_name\"]}</option>)\n                            }\n                        </select>\n                    </div>\n                    <div>\n                        <label htmlFor=\"date\">Start date of week:</label>\n                        <input type=\"date\" id=\"date\" name=\"date\" value={this.state.startDate} onChange={this.onDateChange}/>\n                    </div>\n                    <div>\n                        <span>Check slot every&nbsp;</span>\n                        <input min={1} value={this.state.interval} step={1} type={'number'} onChange={this.onIntervalChange}\n                               title={'Interval'}/>\n                        <span>&nbsp;second{this.state.interval > 1 ? 's' : ''}.</span>\n                    </div>\n                    <button disabled={this.state.executing} onClick={this.onExecute}>{this.state.executing ? `Executing every ${this.state.interval} seconds...` : 'Execute'}</button>\n                    {this.state.executing ? <button onClick={this.onStop}>Stop</button> : null}\n                </div>\n                <div>\n                    <DataTable rows={this.state.centers} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport './App.css';\n\nimport Login from './Login';\nimport Dashboard from \"./Dashboard\";\n\nclass App extends React.Component {\n  reload = () => {\n    this.forceUpdate();\n  }\n  render() {\n    return (\n        <div className=\"App\">\n          {!localStorage.getItem('token') ? <Login onSuccess={this.reload} /> : <Dashboard onError={this.reload}/>}\n        </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}